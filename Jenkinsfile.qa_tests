// Jenkinsfile.qa_tests (in majd.kassem.business_qa.git)
pipeline {
    agent any // Use 'any' as it seems your existing setup on the agent works.

    parameters {
        string(name: 'STAGING_URL_PARAM', defaultValue: 'https://majd-kassem-business-dev.onrender.com/', description: 'URL of the SUT staging environment')
    }

    environment {
        QA_REPO = 'https://github.com/majd-j-kassem/majd.kassem.business_qa.git'
        QA_BRANCH = 'dev' // Or 'main' if your test code is kept on main
        LIVE_DEPLOY_JOB_NAME = 'SUT-Deploy-Live' // EXACT name of the Jenkins job for live deployment
        GIT_CREDENTIAL_ID = 'git_id' // <--- Use the ID you created in Step 1
    }

    stages {
        stage('Checkout QA Tests') {
            steps {
                script {
                    echo "Checking out QA repository: ${env.QA_REPO}, branch: ${env.QA_BRANCH}"
                    checkout scm
                }
            }
        }

        stage('Run QA Tests against Staging') {
            steps {
                script {
                    echo "Running Selenium tests against Staging URL: ${params.STAGING_URL_PARAM}"
                    // It's good practice to create the allure-results directory explicitly
                    sh "mkdir -p allure-results"
                    sh "mkdir -p test-results" // For JUnit XML if you decide to use it separately

                    // CORRECTED LINE: Used ./venv/bin/pytest and correctly quoted --baseurl
                    sh "./.venv/bin/pytest src/tests --alluredir=allure-results --junitxml=test-results/junit_report.xml --browser chrome-headless --baseurl \"${params.STAGING_URL_PARAM}\""
                }
            }
        }

        stage('Trigger SUT Live Deployment (if tests pass)') {
            when {
                // Only proceed if the current QA test build is SUCCESSFUL.
                expression { currentBuild.result == 'SUCCESS' }
            }
            steps {
                script {
                    echo "QA tests passed. Triggering live deployment job: ${env.LIVE_DEPLOY_JOB_NAME}"
                    build job: env.LIVE_DEPLOY_JOB_NAME, wait: true
                }
            }
        }
    }

    // --- Report Publishing and Cleanup ---
    post {
        always {
            script {
                echo 'Publishing Allure Test Report...'
                // Correct Allure report publishing syntax
                allure([
                    reportBuildPolicy: 'ALWAYS', // Always publish the report
                    results: [[path: 'allure-results']] // Specify where the raw results are
                ])

                echo 'Publishing JUnit XML Reports...'
                // Publish JUnit XML results for Jenkins' built-in Test Results view and trend graphs.
                junit 'test-results/junit_report.xml'

                // --- Optional: Update build description/display name for quick overview ---
                def testResultAction = currentBuild.testResultAction
                if (testResultAction != null) {
                    def totalTests = testResultAction.totalCount
                    def failedTests = testResultAction.failCount
                    def skippedTests = testResultAction.skipCount
                    currentBuild.displayName = "#${env.BUILD_NUMBER} (${totalTests} tests, ${failedTests} failed)"
                    currentBuild.description = "Total: ${totalTests} | Failed: ${failedTests} | Skipped: ${skippedTests}"
                }
            }
        }
        success {
            script {
                echo 'QA Tests pipeline finished successfully. Sending email...'
                emailext (
                    to: 'mjdwassouf@gmail.com', // <<--- REPLACE WITH YOUR EMAIL(S)
                    subject: "Jenkins Build ${env.JOB_NAME} - #${env.BUILD_NUMBER} - SUCCESS",
                    body: """
                    <p>Build Status: <b>SUCCESS</b></p>
                    <p>Project: ${env.JOB_NAME}</p>
                    <p>Build URL: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>
                    <p>Allure Report: <a href="${env.BUILD_URL}allure/">Click here to view Allure Report</a></p>
                    <p>See attached for JUnit XML results.</p>
                    """,
                    mimeType: 'text/html',
                    attachmentsPattern: 'test-results/junit_report.xml' // Attach JUnit XML report
                )
            }
            deleteDir() // Clean up workspace after sending email
        }
        failure {
            script {
                echo 'QA Tests pipeline FAILED. No deployment to live. Sending email...'
                emailext (
                    to: 'mjdwassouf@gmail.com', // <<--- REPLACE WITH YOUR EMAIL(S)
                    subject: "Jenkins Build ${env.JOB_NAME} - #${env.BUILD_NUMBER} - FAILED",
                    body: """
                    <p>Build Status: <b>FAILED!</b></p>
                    <p>Project: ${env.JOB_NAME}</p>
                    <p>Build URL: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>
                    <p>Please check the console output for details: <a href="${env.BUILD_URL}console">Console Output</a></p>
                    <p>Allure Report (if generated): <a href="${env.BUILD_URL}allure/">Click here to view Allure Report</a></p>
                    <p>See attached for JUnit XML results.</p>
                    """,
                    mimeType: 'text/html',
                    attachmentsPattern: 'test-results/junit_report.xml' // Attach JUnit XML report for failure analysis
                )
            }
            deleteDir() // Clean up workspace after sending email
        }
        unstable {
            script {
                echo 'QA Tests pipeline finished with unstable results (e.g., some tests failed). Sending email...'
                emailext (
                    to: 'mjdwassouf@gmail.com', // <<--- REPLACE WITH YOUR EMAIL(S)
                    subject: "Jenkins Build ${env.JOB_NAME} - #${env.BUILD_NUMBER} - UNSTABLE (Some Tests Failed)",
                    body: """
                    <p>Build Status: <b>UNSTABLE</b> (Some tests failed)</p>
                    <p>Project: ${env.JOB_NAME}</p>
                    <p>Build URL: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>
                    <p>Allure Report: <a href="${env.BUILD_URL}allure/">Click here to view Allure Report</a></p>
                    <p>See attached for JUnit XML results.</p>
                    """,
                    mimeType: 'text/html',
                    attachmentsPattern: 'test-results/junit_report.xml'
                )
            }
            deleteDir() // Clean up workspace after sending email
        }
    }
}